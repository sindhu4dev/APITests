{
	"info": {
		"_postman_id": "c56b58b7-1e2d-4828-9f4c-504c6416cc4d",
		"name": "MyFirstCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25755528"
	},
	"item": [
		{
			"name": "Cat Facts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200 or 201\", () => {",
							"    pm.expect(pm.response.code).to.eql(200 || 201);",
							"});",
							"",
							"pm.test(\"headers content type\", () => {",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json; charset=utf-8\");",
							"});",
							"",
							"pm.test(\"Test cookies\", () => {",
							"    pm.expect(pm.cookies.get(\"connect.sid\")).to.eql(\"s:k0edjjOZg2kek430fHQf_tOKW4JBOivT.CwZGOs52beI/CAI4kTTS7gtdcI6xck+cq2JUJW/UYX0\");",
							"});",
							"",
							"pm.test(\"Test respnse time is less than 500 ms\", () => {",
							"    pm.expect(pm.response.responseTime).to.lt(500);",
							"});",
							"",
							"const responseJson = pm.response.json();",
							"",
							"pm.test(\"Check if response contains an array\", () => {",
							"   pm.expect(responseJson).to.be.an(\"array\") ",
							"});",
							"",
							"pm.test(\"Check if response array length is > 5\", () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(Object.keys(responseJson).length).to.eql(5)",
							"   pm.expect(pm.response.json().length).to.eql(5);",
							"});",
							"",
							"var respjs1 = responseJson[0];",
							"",
							"",
							"pm.test(\"Check in each of the array item, the “user” is the property and the data type\", ",
							"() => {",
							"pm.expect(respjs1).to.have.property(\"user\");",
							"pm.expect(respjs1.user).to.be.an(\"String\") ",
							"pm.expect(respjs1.sample).to.be.undefined",
							"});",
							"",
							"",
							"pm.test(\"Check if user proeprty value of first item in array is 5a9ac18c7478810ea6c06381\", ",
							"() => {",
							"    pm.expect(respjs1.user).eql(\"5a9ac18c7478810ea6c06381\");",
							"});",
							"",
							"pm.test(\"Check if source proeprty value of first item in array is user\", ",
							"() => {",
							"    pm.expect(respjs1.source).eql(\"user\");",
							"});",
							"",
							"pm.test(\"Check if text proeprty value of first item in array\", ",
							"() => {",
							"    pm.expect(respjs1.text).contains(\"Cats make\");",
							"    pm.expect(respjs1.text).contains(\"Dogs make\");",
							"});",
							"",
							"",
							"pm.test(\"Check if status.verified is true\", ",
							"() => {",
							"    pm.expect(respjs1.status.verified).eql(true);",
							"});",
							"",
							"pm.test(\"Check if status.sentCount is 1\", () => {",
							"    pm.expect(respjs1.status.sentCount).eql(1);",
							"});",
							"",
							"pm.test(\"plain text verification no format\", () => {",
							"    pm.expect(pm.response.text()).contains(\"Cats\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{animal_host}}/facts/",
					"protocol": "https",
					"host": [
						"{{animal_host}}"
					],
					"path": [
						"facts",
						""
					]
				},
				"description": "Facts about cats.\n\nURL - https://alexwohlbruck.github.io/cat-facts/"
			},
			"response": []
		},
		{
			"name": "Pet Food Facts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const responseJson = pm.response.json();",
							"",
							"/*pm.test(\"Check an array contains\", () => {",
							"   pm.expect(responseJson.product.nutrient_levels_tags).to.be.an(\"array\") ",
							"   pm.expect(responseJson.product.nutrient_levels_tags).contains(\"en:fat-in-moderate-quantity\") ",
							"   pm.expect(responseJson.product.nutrient_levels_tags).length.to.eql(1) ",
							"});*/",
							"pm.test(\"Check the environment\", () =>",
							"{",
							"    console.log(\"****\",pm.environment.name)",
							"    pm.expect(pm.environment.name).to.eql(\"Prod\")",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{hostName}}/api/v0/product/{{id}}.json",
					"protocol": "https",
					"host": [
						"{{hostName}}"
					],
					"path": [
						"api",
						"v0",
						"product",
						"{{id}}.json"
					]
				},
				"description": "Returns facts on pet food using barcode."
			},
			"response": []
		},
		{
			"name": "Dog Breeds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"\")"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{dog_host}}/api/breeds/list/{{ttt}}",
					"protocol": "https",
					"host": [
						"{{dog_host}}"
					],
					"path": [
						"api",
						"breeds",
						"list",
						"{{ttt}}"
					]
				},
				"description": "List all dog breeds.\n\nURL - https://dog.ceo/dog-api/documentation/"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "test5",
			"value": "20106836"
		},
		{
			"key": "hostName",
			"value": "world.openpetfoodfacts.org"
		},
		{
			"key": "id",
			"value": "2324"
		},
		{
			"key": "ttt",
			"value": "all"
		}
	]
}