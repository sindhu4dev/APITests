{
	"info": {
		"_postman_id": "c56b58b7-1e2d-4828-9f4c-504c6416cc4d",
		"name": "MyFirstCollection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25755528"
	},
	"item": [
		{
			"name": "Cat Facts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Writing test in BDD",
							"pm.test(\"Status code is 200 BDD syntax\", function() {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Status code is 200\", () => {",
							"    pm.expect(pm.response.code).to.eql(200);",
							"    });",
							"",
							"const responseJson = pm.response.json();",
							"",
							"pm.test(\"Check if response contains an array\", () => {",
							"   pm.expect(responseJson).to.be.an(\"array\") ",
							"});",
							"",
							"pm.test(\"Check if response array length is > 5\", () => {",
							"   const responseJson = pm.response.json();",
							"   pm.expect(Object.keys(responseJson).length).to.eql(5)",
							"   pm.expect(pm.response.json().length).to.eql(5);",
							"});",
							"",
							"var respjs1 = responseJson[0];",
							"",
							"pm.test(\"Check in each of the array item, the “user” is the property\", ",
							"() => {",
							"pm.expect(respjs1).to.have.property(\"user\");",
							"});",
							"",
							"",
							"pm.test(\"Check if user proeprty value of first item in array is 58e007480aac31001185ecef\", ",
							"() => {",
							"    pm.expect(respjs1.user).eql(\"58e007480aac31001185ecef\");",
							"});",
							"",
							"pm.test(\"Check if source proeprty value of first item in array is user\", ",
							"() => {",
							"    pm.expect(respjs1.source).eql(\"user\");",
							"});",
							"",
							"pm.test(\"Check if text proeprty value of first item in array\", ",
							"() => {",
							"    pm.expect(respjs1.text).contains(\"cat meowing\");",
							"});",
							"",
							"",
							"pm.test(\"Check if status.verified is true\", ",
							"() => {",
							"    pm.expect(respjs1.status.verified).eql(true);",
							"});",
							"",
							"pm.test(\"Check if status.sentCount is 1\", () => {",
							"    pm.expect(respjs1.status.sentCount).eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{animal_host}}/facts/",
					"protocol": "https",
					"host": [
						"{{animal_host}}"
					],
					"path": [
						"facts",
						""
					]
				},
				"description": "Facts about cats.\n\nURL - https://alexwohlbruck.github.io/cat-facts/"
			},
			"response": []
		},
		{
			"name": "Pet Food Facts",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://world.openpetfoodfacts.org/api/v0/product/20106836.json",
					"protocol": "https",
					"host": [
						"world",
						"openpetfoodfacts",
						"org"
					],
					"path": [
						"api",
						"v0",
						"product",
						"20106836.json"
					]
				},
				"description": "Returns facts on pet food using barcode."
			},
			"response": []
		},
		{
			"name": "Dog Breeds",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://{{dog_host}}/api/breeds/list/all",
					"protocol": "https",
					"host": [
						"{{dog_host}}"
					],
					"path": [
						"api",
						"breeds",
						"list",
						"all"
					]
				},
				"description": "List all dog breeds.\n\nURL - https://dog.ceo/dog-api/documentation/"
			},
			"response": []
		}
	]
}